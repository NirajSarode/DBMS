(base) nand@spectre:~$ mongo
MongoDB shell version: 3.2.22
connecting to: test
> use dbms;
switched to db dbms
> db.library.insert({book_isbn varchar(5),title varchar(10),pub_name varchar(10),price int,dateofpub : Date(Date.now()),book_copy int,address varchar(20),phone int });
2019-11-05T13:45:14.437+0530 E QUERY    [thread1] SyntaxError: missing : after property id @(shell):1:29

> db.library.insert({book_isbn : 1,title : 't1',pub_name : 'p1,price : 10,dateofpub : Date(Date.now()),book_copy : 10,address : 'add1',phone : 11111 });
2019-11-05T13:49:05.643+0530 E QUERY    [thread1] SyntaxError: missing } after property list @(shell):1:127

> db.library.insert({book_isbn : 1,title : 't1',pub_name : 'p1,price : 10,dateofpub : '2019-01-02',book_copy : 10,address : 'add1',phone : 11111 });
2019-11-05T13:49:53.524+0530 E QUERY    [thread1] SyntaxError: missing } after property list @(shell):1:85

> db.library.insert({book_isbn : 1,title : 't1',pub_name : 'p1',price : 10,dateofpub : '2019-01-02',book_copy : 10,address : 'add1',phone : 11111 });
WriteResult({ "nInserted" : 1 })
> db.li
db.library        db.listCommands(
> db.library.find().pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 11111
}
> db.library.insert({book_isbn : 2,title : 't2',pub_name : 'p2',price : 20,dateofpub : '2019-11-22',book_copy : 20,address : 'add2',phone : 11112 });
WriteResult({ "nInserted" : 1 })
> db.library.insert({book_isbn : 3,title : 't3',pub_name : 'p3',price : 30,dateofpub : '2018-11-23',book_copy : 30,address : 'add3',phone : 11113 });
WriteResult({ "nInserted" : 1 })
> db.library.find().pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 11111
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "p3",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.find({},{_id:0}).pretty()
{
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 11111
}
{
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "p3",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.find({title : 1,price:1,book_copy:1}).pretty()
> ;
> ;sdc;
2019-11-05T13:53:06.354+0530 E QUERY    [thread1] ReferenceError: sdc is not defined :
@(shell):1:2

> db.library.find({title : 1,price:1,book_copy:1}).pretty()
> ;
> ;
> 
> 
> ;
> zds
2019-11-05T13:53:37.435+0530 E QUERY    [thread1] ReferenceError: zds is not defined :
@(shell):1:1

> db.library.find({}{title : 1,price:1,book_copy:1}).pretty()
2019-11-05T13:54:03.558+0530 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:18

> db.library.find({},{title : 1,price:1,book_copy:1}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"title" : "t1",
	"price" : 10,
	"book_copy" : 10
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"title" : "t2",
	"price" : 20,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"title" : "t3",
	"price" : 30,
	"book_copy" : 30
}
> db.library.find({title : {$ne : t2}})
2019-11-05T13:55:37.211+0530 E QUERY    [thread1] ReferenceError: t2 is not defined :
@(shell):1:27

> db.library.find({title : {$ne : t2}},{})
2019-11-05T13:56:30.925+0530 E QUERY    [thread1] ReferenceError: t2 is not defined :
@(shell):1:27

> db.library.find({title : {$ne  t2}},{})
2019-11-05T13:56:41.327+0530 E QUERY    [thread1] SyntaxError: missing : after property id @(shell):1:31

> db.library.find({title : {$ne : 't2'}})
{ "_id" : ObjectId("5dc130c0727283fba91d20f8"), "book_isbn" : 1, "title" : "t1", "pub_name" : "p1", "price" : 10, "dateofpub" : "2019-01-02", "book_copy" : 10, "address" : "add1", "phone" : 11111 }
{ "_id" : ObjectId("5dc1311a727283fba91d20fa"), "book_isbn" : 3, "title" : "t3", "pub_name" : "p3", "price" : 30, "dateofpub" : "2018-11-23", "book_copy" : 30, "address" : "add3", "phone" : 11113 }
> db.library.find({title : {$ne : 't2'}}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 11111
}
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "p3",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.find({price : {$gte : 20}}).pretty()
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "p3",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.find({price : {$gt : 20}}).pretty()
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "p3",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.update({book_isbn : 3},{$set:{pub_name : 'tata'}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.library.find({price : {$gt : 20}}).pretty()
{
	"_id" : ObjectId("5dc1311a727283fba91d20fa"),
	"book_isbn" : 3,
	"title" : "t3",
	"pub_name" : "tata",
	"price" : 30,
	"dateofpub" : "2018-11-23",
	"book_copy" : 30,
	"address" : "add3",
	"phone" : 11113
}
> db.library.remove({pub_name : 'tata'})
WriteResult({ "nRemoved" : 1 })
> db.library.find({price : {$gt : 20}}).pretty()
> db.library.find().pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 11111
} db.library.update({},{$set:{phone : wewewewfwef}},{multi:true})
2019-11-05T14:04:47.248+0530 E QUERY    [thread1] ReferenceError: wewewewfwef is not defined :
@(shell):1:29

> db.library.update({},{$set:{phone : 22222}},{multi:true})
WriteResult({ "nMatched" : 2, "nUpserted" : 0, "nModified" : 2 })
> db.library.find().pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 22222
}
> db.createIndex({'book_isbn':1},{unique : true})
2019-11-05T14:10:00.864+0530 E QUERY    [thread1] TypeError: db.createIndex is not a function :
@(shell):1:1

> db.library.createIndex({'book_isbn':1},{unique : true})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
}
> db.library.insert({book_isbn : 2,title : 't2',pub_name : 'p2',price : 20,dateofpub : '2019-11-22',book_copy : 20,address : 'add2',phone : 11112 });
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: dbms.library index: book_isbn_1 dup key: { : 2.0 }"
	}
})
> db.library.createIndex({'book_isbn':1,'pub_name':1})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 2,
	"numIndexesAfter" : 3,
	"ok" : 1
}
> db.library.find({price:{$gte:20}})
{ "_id" : ObjectId("5dc130fb727283fba91d20f9"), "book_isbn" : 2, "title" : "t2", "pub_name" : "p2", "price" : 20, "dateofpub" : "2019-11-22", "book_copy" : 20, "address" : "add2", "phone" : 22222 }
> db.library.find({price:{$gte:20}}).pretty()
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 22222
}
> db.library.find({price:{$gte:10}}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 22222
}
> db.library.find({price:{$gte:10}},{'title':1}).pretty()
{ "_id" : ObjectId("5dc130c0727283fba91d20f8"), "title" : "t1" }
{ "_id" : ObjectId("5dc130fb727283fba91d20f9"), "title" : "t2" }
> db.library.find({price:{$gte:10}},{'title':1,_id:0}).pretty()
{ "title" : "t1" }
{ "title" : "t2" }
> db.library.find({price:{$gte:10},'pub_name':'p2'},{'title':1,_id:0}).pretty()
{ "title" : "t2" }
> db.library.insert({book_isbn : 6,title : 't2',pub_name : 'p2',price : 2,dateofpub : '2019-11-22',book_copy : 20,address : 'add2',phone : 11112 });
WriteResult({ "nInserted" : 1 })
> db.library.insert({book_isbn : 1,title : 't2',pub_name : 'p2',price : 2,dateofpub : '2019-11-22',book_copy : 20,address : 'add2',phone : 11112 });
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: dbms.library index: book_isbn_1 dup key: { : 1.0 }"
	}
})
> db.library.insert({book_isbn : 4,title : 't2',pub_name : 'p2',price : 2,dateofpub : '2019-11-22',book_copy : 20,address : 'add2',phone : 11112 });
WriteResult({ "nInserted" : 1 })
> db.library.find({},{'book_isbn':1,price:1}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"price" : 10
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"price" : 20
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"book_isbn" : 6,
	"price" : 2
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"book_isbn" : 4,
	"price" : 2
}
> db.library.find({},{book_copy:1,price:1}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"price" : 10,
	"book_copy" : 10
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"price" : 20,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"price" : 2,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"price" : 2,
	"book_copy" : 20
}
> db.library.insert({book_isbn : 6,title : 't2',pub_name : 'p2',price : 2,dateofpub : '2019-11-22',book_copy : 2,address : 'add2',phone : 11112 });
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "E11000 duplicate key error collection: dbms.library index: book_isbn_1 dup key: { : 6.0 }"
	}
})
> db.library.insert({book_isbn : 7,title : 't2',pub_name : 'p2',price : 2,dateofpub : '2019-11-22',book_copy : 2,address : 'add2',phone : 11112 });
WriteResult({ "nInserted" : 1 })
> db.library.find({},{book_copy:1,price:1}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"price" : 10,
	"book_copy" : 10
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"price" : 20,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"price" : 2,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"price" : 2,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc137fb727283fba91d2100"),
	"price" : 2,
	"book_copy" : 2
}
> db.library.find({$or:[{price:{$gt:5}},{book_copy:{$gt:5}}]}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"book_isbn" : 6,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 2,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"book_isbn" : 4,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 2,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
> db.library.find({$or:[{price:{$gt:5}},{book_copy:{$gt:5}}]},{book_copy:1,price:1}).pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"price" : 10,
	"book_copy" : 10
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"price" : 20,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"price" : 2,
	"book_copy" : 20
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"price" : 2,
	"book_copy" : 20
}
> db.library.aggregate()
{ "_id" : ObjectId("5dc130c0727283fba91d20f8"), "book_isbn" : 1, "title" : "t1", "pub_name" : "p1", "price" : 10, "dateofpub" : "2019-01-02", "book_copy" : 10, "address" : "add1", "phone" : 22222 }
{ "_id" : ObjectId("5dc130fb727283fba91d20f9"), "book_isbn" : 2, "title" : "t2", "pub_name" : "p2", "price" : 20, "dateofpub" : "2019-11-22", "book_copy" : 20, "address" : "add2", "phone" : 22222 }
{ "_id" : ObjectId("5dc13769727283fba91d20fc"), "book_isbn" : 6, "title" : "t2", "pub_name" : "p2", "price" : 2, "dateofpub" : "2019-11-22", "book_copy" : 20, "address" : "add2", "phone" : 11112 }
{ "_id" : ObjectId("5dc1377d727283fba91d20fe"), "book_isbn" : 4, "title" : "t2", "pub_name" : "p2", "price" : 2, "dateofpub" : "2019-11-22", "book_copy" : 20, "address" : "add2", "phone" : 11112 }
{ "_id" : ObjectId("5dc137fb727283fba91d2100"), "book_isbn" : 7, "title" : "t2", "pub_name" : "p2", "price" : 2, "dateofpub" : "2019-11-22", "book_copy" : 2, "address" : "add2", "phone" : 11112 }
> db.library.aggregate(
... [
... {
... $group:
... {
... _id : {price1 : "$price",copy : "book_copy"}
... }
... }
... ]
... )
{ "_id" : { "price1" : 2, "copy" : "book_copy" } }
{ "_id" : { "price1" : 20, "copy" : "book_copy" } }
{ "_id" : { "price1" : 10, "copy" : "book_copy" } }
> db.library.aggregate( [ { $group: { _id : {price1 : "$price",copy : "$book_copy"} } } ] )
{ "_id" : { "price1" : 2, "copy" : 2 } }
{ "_id" : { "price1" : 2, "copy" : 20 } }
{ "_id" : { "price1" : 20, "copy" : 20 } }
{ "_id" : { "price1" : 10, "copy" : 10 } }
> db.library.aggregate( [ { $group: { _id : {price1 : "$price",copy : "$book_copy"},count:{$sum:[price,book_copy]} } } ] )
2019-11-05T14:30:06.355+0530 E QUERY    [thread1] ReferenceError: price is not defined :
@(shell):1:96

> db.library.aggregate( [ { $group: { _id : {price1 : "$price",copy : "$book_copy"},count:{$sum:[price1,copy]} } } ] )
2019-11-05T14:30:17.793+0530 E QUERY    [thread1] ReferenceError: price1 is not defined :
@(shell):1:96

> db.library.aggregate( [ { $group: { _id : {price1 : "$price",copy : "$book_copy"},count:{$sum:['$price','$book_copy']} } } ] )
assert: command failed: {
	"ok" : 0,
	"errmsg" : "aggregating group operators are unary ($sum)",
	"code" : 15953
} : aggregate failed
_getErrorWithCode@src/mongo/shell/utils.js:25:13
doassert@src/mongo/shell/assert.js:16:14
assert.commandWorked@src/mongo/shell/assert.js:290:5
DBCollection.prototype.aggregate@src/mongo/shell/collection.js:1312:5
@(shell):1:1

2019-11-05T14:30:49.373+0530 E QUERY    [thread1] Error: command failed: {
	"ok" : 0,
	"errmsg" : "aggregating group operators are unary ($sum)",
	"code" : 15953
} : aggregate failed :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
doassert@src/mongo/shell/assert.js:16:14
assert.commandWorked@src/mongo/shell/assert.js:290:5
DBCollection.prototype.aggregate@src/mongo/shell/collection.js:1312:5
@(shell):1:1

> db.library.aggregate($group:{_id:{price1 : "$price",copy : "$book_copy"},count:{$sum:1}})
2019-11-05T14:32:44.592+0530 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:27

> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            totalAmount: { $sum: [ "$price", "$book_copy" ]  }
...          }
...      }
...    ]
... );
assert: command failed: {
	"ok" : 0,
	"errmsg" : "aggregating group operators are unary ($sum)",
	"code" : 15953
} : aggregate failed
_getErrorWithCode@src/mongo/shell/utils.js:25:13
doassert@src/mongo/shell/assert.js:16:14
assert.commandWorked@src/mongo/shell/assert.js:290:5
DBCollection.prototype.aggregate@src/mongo/shell/collection.js:1312:5
@(shell):1:1

2019-11-05T14:40:54.753+0530 E QUERY    [thread1] Error: command failed: {
	"ok" : 0,
	"errmsg" : "aggregating group operators are unary ($sum)",
	"code" : 15953
} : aggregate failed :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
doassert@src/mongo/shell/assert.js:16:14
assert.commandWorked@src/mongo/shell/assert.js:290:5
DBCollection.prototype.aggregate@src/mongo/shell/collection.js:1312:5
@(shell):1:1

> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            totalAmount: { $sum:  "$price"   }
...          }
...      }
...    ]
... );
{ "_id" : { "price1" : 2, "copy" : 2 }, "totalAmount" : 2 }
{ "_id" : { "price1" : 2, "copy" : 20 }, "totalAmount" : 4 }
{ "_id" : { "price1" : 20, "copy" : 20 }, "totalAmount" : 20 }
{ "_id" : { "price1" : 10, "copy" : 10 }, "totalAmount" : 10 }
> db.library.find().pretty()
{
	"_id" : ObjectId("5dc130c0727283fba91d20f8"),
	"book_isbn" : 1,
	"title" : "t1",
	"pub_name" : "p1",
	"price" : 10,
	"dateofpub" : "2019-01-02",
	"book_copy" : 10,
	"address" : "add1",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc130fb727283fba91d20f9"),
	"book_isbn" : 2,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 20,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 22222
}
{
	"_id" : ObjectId("5dc13769727283fba91d20fc"),
	"book_isbn" : 6,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 2,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"_id" : ObjectId("5dc1377d727283fba91d20fe"),
	"book_isbn" : 4,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 2,
	"dateofpub" : "2019-11-22",
	"book_copy" : 20,
	"address" : "add2",
	"phone" : 11112
}
{
	"_id" : ObjectId("5dc137fb727283fba91d2100"),
	"book_isbn" : 7,
	"title" : "t2",
	"pub_name" : "p2",
	"price" : 2,
	"dateofpub" : "2019-11-22",
	"book_copy" : 2,
	"address" : "add2",
	"phone" : 11112
}
> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            totalAmount: { $sum:  {"$price"}   }
...          }
...      }
...    ]
... )
2019-11-05T14:43:59.718+0530 E QUERY    [thread1] SyntaxError: missing : after property id @(shell):7:42

> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            totalAmount: { $sum:  {"$price"}   }
...          }
...      }
...    ]
... );
2019-11-05T14:44:07.018+0530 E QUERY    [thread1] SyntaxError: missing : after property id @(shell):7:42

> 
> 
> 
> 
> 
> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            totalAmount: { $sum:  "$price"   }
...          }
...      }
...    ]
... )
{ "_id" : { "price1" : 2, "copy" : 2 }, "totalAmount" : 2 }
{ "_id" : { "price1" : 2, "copy" : 20 }, "totalAmount" : 4 }
{ "_id" : { "price1" : 20, "copy" : 20 }, "totalAmount" : 20 }
{ "_id" : { "price1" : 10, "copy" : 10 }, "totalAmount" : 10 }
> db.library.aggregate(    [      {        $group:          {            _id: { price1: "$price", copy: "$book_copy" },            totalAmount: { $sum:  "$price"   }          }      }    ] )
{ "_id" : { "price1" : 2, "copy" : 2 }, "totalAmount" : 2 }
{ "_id" : { "price1" : 2, "copy" : 20 }, "totalAmount" : 4 }
{ "_id" : { "price1" : 20, "copy" : 20 }, "totalAmount" : 20 }
{ "_id" : { "price1" : 10, "copy" : 10 }, "totalAmount" : 10 }
> 
> 
> 
> 
> 
> db.library.aggregate(
...    [
...      {
...        $group:
...          {
...            _id: { price1: "$price", copy: "$book_copy" },
...            count: { $sum:  1   }
...          }
...      }
...    ]
... )
{ "_id" : { "price1" : 2, "copy" : 2 }, "count" : 1 }
{ "_id" : { "price1" : 2, "copy" : 20 }, "count" : 2 }
{ "_id" : { "price1" : 20, "copy" : 20 }, "count" : 1 }
{ "_id" : { "price1" : 10, "copy" : 10 }, "count" : 1 }
> 


db.students.aggregate([{$group:{_id:"$Name" , tot_marks:{$sum:"$marks"}}},{$match:{}]) 




> db.students.aggregate([{$group:{_id:"$Name" , tot_marks:{$sum:"$marks"}}},{$match:{"tot_marks":{"$gte":210}}}]) 
{ "_id" : "Giri", "tot_marks" : 216 }

> db.students.aggregate([{$group:{_id:"$subject" , topper:{$max:"$marks"}}}])
{ "_id" : "sdl", "topper" : 80 }
{ "_id" : "cn", "topper" : 65 }
{ "_id" : "dbms", "topper" : 82 }

> db.students.aggregate([{$group:{_id:"$s" , tot_marks:{$sum:"$marks"}}}])
{ "_id" : "Sugu", "tot_marks" : 209 }
{ "_id" : "Giri", "tot_marks" : 216 }
{ "_id" : "Nand", "tot_marks" : 208 }
> db.students.createIndex({Name:1})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
}
> db.students.getIndexes()
[
	{
		"v" : 1,
		"key" : {
			"_id" : 1
		},
		"name" : "_id_",
		"ns" : "dbms.students"
	},
	{
		"v" : 1,
		"key" : {
			"Name" : 1
		},
		"name" : "Name_1",
		"ns" : "dbms.students"
	}
]
> db.students.createIndex({Name:1,subject:1})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 2,
	"numIndexesAfter" : 3,
	"ok" : 1
}
> db.students.dropIndex("Name_1_subject_1")
{ "nIndexesWas" : 3, "ok" : 1 }
> db.students.dropIndex("marks_1")
{
	"nIndexesWas" : 2,
	"ok" : 0,
	"errmsg" : "index not found with name [marks_1]",
	"code" : 27
}
> db.students.dropIndex("Name_1")
{ "nIndexesWas" : 2, "ok" : 1 }
> db.students.createIndex({Marks:1},{unique:true})
{
	"ok" : 0,
	"errmsg" : "E11000 duplicate key error collection: dbms.students index: Marks_1 dup key: { : null }",
	"code" : 11000
}
> 


> db.students.find().pretty()
{
	"_id" : ObjectId("5dc23f0a0396454019cd0588"),
	"Name" : "Nand",
	"subject" : "dbms",
	"marks" : 68
}
{
	"_id" : ObjectId("5dc23f1f0396454019cd0589"),
	"Name" : "Nand",
	"subject" : "cn",
	"marks" : 60
}
{
	"_id" : ObjectId("5dc23f2e0396454019cd058a"),
	"Name" : "Nand",
	"subject" : "sdl",
	"marks" : 80
}
{
	"_id" : ObjectId("5dc23f3c0396454019cd058b"),
	"Name" : "Giri",
	"subject" : "dbms",
	"marks" : 82
}
{
	"_id" : ObjectId("5dc23f440396454019cd058c"),
	"Name" : "Giri",
	"subject" : "cn",
	"marks" : 62
}
{
	"_id" : ObjectId("5dc23f4d0396454019cd058d"),
	"Name" : "Giri",
	"subject" : "sdl",
	"marks" : 72
}
{
	"_id" : ObjectId("5dc23f5e0396454019cd058e"),
	"Name" : "Sugu",
	"subject" : "dbms",
	"marks" : 75
}
{
	"_id" : ObjectId("5dc23f660396454019cd058f"),
	"Name" : "Sugu",
	"subject" : "cn",
	"marks" : 65
}
{
	"_id" : ObjectId("5dc23f6e0396454019cd0590"),
	"Name" : "Sugu",
	"subject" : "sdl",
	"marks" : 69
}




> var map = function() { emit(this.Name,this.marks); };
> var reduce = function(name,marks) { return Array.sum(marks); };
> db.students.mapReduce(map, reduce, {out:"totals"});
{
	"result" : "totals",
	"timeMillis" : 87,
	"counts" : {
		"input" : 9,
		"emit" : 9,
		"reduce" : 3,
		"output" : 3
	},
	"ok" : 1
}
> db.totals.find();
{ "_id" : "Giri", "value" : 216 }
{ "_id" : "Nand", "value" : 208 }
{ "_id" : "Sugu", "value" : 209 }
> 

